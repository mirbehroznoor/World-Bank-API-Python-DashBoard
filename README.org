#+title: World Bank API Python DashBoard
#+author: Mir Behroz Noor

*Since [[https://data.worldbank.org/indicator/NY.GDP.MKTP.CD][The World Bank Data]] has stopped visualizing data for years before 2000. This project aims at providing the visualizations of all data available from [[https://github.com/tgherzog/wbgapi][World Bank API Python]]. There is World Bank package for R too. Either in R and Python, both of them supports interactive Plotly. I found easier it to implement in Python. I hope someone else finds it helpful too*

** Dash App Versions
*** Simple App
It is one variable app where user can only change y-axis variable. It accepts only one variable while it is possible to add as many economies as possible.

[[https://raw.githubusercontent.com/mirbehroznoor/World-Bank-API-Python-DashBoard/main/simpleApp.png]]

*** Multi App
*Note: Either select one economy with multiple indicators or one indicator with multiple economies.*
The Multi App is similar with respect to number of countries. The user can change the x-axis and y-axis variables. The user can look for multi-variable trends for a country, otherwise multi and simple Apps are almost the same.
***** Limitation
The Multi App will not work if 2 or more than two economies and both indicators are selected simultaneously. The problem occurs because Plotly does not support Pandas multi-index Dataframe.

[[https://raw.githubusercontent.com/mirbehroznoor/World-Bank-API-Python-DashBoard/main/multiApp.png]]

** Possibility to Switch
It is possible to switch from Simple to Multi App or vice versa.
***** Limitation
If App was switched, the options will reset to default. The default settings can be changed from within scripts.
** Create a Conda Environment
#+begin_src shell
  bash build_env.sh
#+end_src

** Run Python App
Simply run the =app.py= script. The App will open in the default browser after few seconds.
*** Manually
#+begin_src bash
  cd ~/path/to/World-Bank-API-Python-DashBoard
  conda activate wbconda
  python app.py
#+end_src

*** Automate
**** Write Bash Alias function
Find or create =.bash_aliases= in folder =$HOME= Directory. Insert the function snippet:
#+begin_src bash
  wbapp() {
      cd ~/path/to/World-Bank-API-Python-DashBoard
      conda activate wbconda
      python app.py
      conda deactivate wbconda
  }
#+end_src
For shell to re-read the =.bash_aliases= file, run the following command:
#+begin_src bash
  source ~/.bashrc
#+end_src
Afterwards in Terminal, simply run:
#+begin_src bash
  wbapp
#+end_src


** Default Database
World Bank API is set to World Development Indicators (WDI) Database (db=2) by the module developers.
#+begin_src python
import wbgapi as wb
wb.source.info()
#+end_src
In case, of different database request, it can be changed through two ways.
*** Globally at top of script
#+begin_src python
  wb.db = 2
#+end_src
*** Locally for each Dataset request
#+begin_src python
data = wb.data.DataFrame(
    d_indicator,
    d_economies,
    numericTimeKeys=True,
    labels=True,
    db=2)
#+end_src

** Acknowledgment
- [[https://towardsdatascience.com/how-to-extract-key-from-python-dictionary-using-value-2b2f8dd2a995][Towardsdatascience: Extract key from python dictionary]]
- [[https://blog.logrocket.com/data-visualization-interfaces-python-dash/][Logrocket Blog: Data Visualization Interfaces Python Dash]]
- [[https://blogs.worldbank.org/opendata/introducing-wbgapi-new-python-package-accessing-world-bank-data][World Bank Blogs: Introducing wbgapi New Python Package Accessing World Bank Data]]
- [[https://github.com/tgherzog/wbgapi][Github: wbgapi]]
- [[https://dash.plotly.com/interactive-graphing][Plotly: Interactive Graphing]]
- [[https://plotly.com/python/legend/][Plotly: Legend]]
- [[https://dash.plotly.com/urls][Plotly: Multi-Page Apps & URLs Support]]
