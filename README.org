#+title: World Bank API Python DashBoard
#+author: Mir Behroz Noor
#+startup: show4levels

*Update: [[https://data.worldbank.org/indicator/NY.GDP.MKTP.CD][The World Bank Data]] has started showing data visualizations for years before 2000*

*+Since [[https://data.worldbank.org/indicator/NY.GDP.MKTP.CD][The World Bank Data]] has stopped visualizing data for years before 2000+. This project aims at providing the visualizations of the data available from [[https://github.com/tgherzog/wbgapi][World Bank API Python]]. There is World Bank package for R too. Either in R and Python, both support interactive Plotly. I found it easier to implement in Python. I hope someone else finds this helpful too.*

*Limitation: No option to change World Bank API Database from DashBoard/GUI*

** Dash App Versions
*** Simple App
It is one variable App where user can only change y-axis variable while x-axis is by set to ~Year~ by default. It accepts only one indicator while it is possible to add as many economies as possible.

[[https://github.com/mirbehroznoor/World-Bank-API-Python-DashBoard/blob/main/simpleApp.png]]

*** Multi App
In Multi App, the User can choose two indicators on x-axis and y-axis respectively. The user can look for multi-variable trends for economies.

[[https://github.com/mirbehroznoor/World-Bank-API-Python-DashBoard/blob/main/multiApp.png]]

[[https://github.com/mirbehroznoor/World-Bank-API-Python-DashBoard/blob/main/multiApp-2.png]]

*** Possibility to Switch
It is possible to switch from Simple to Multi App or vice versa.
***** Limitation
If App was switched or refreshed, the selections will reset to default. The default settings can be changed from within scripts.

*** Download Graphs as .png
The interactive plotly has the option to download the graphs too.

** Default Database
World Bank API is set to World Development Indicators (WDI) Database, id=2, by the module developers. =wb.source.info()= provides the list of available Databases from World Bank API.
#+begin_src python
  import wbgapi as wb
  wb.source.info() #provide the list of DBs
  wb.db # id number of current Database i.e: (WDI=2)
#+end_src

*** Globally
In case, of a different database request, the =wb.db= value has to be changed at the top of =appSupport.py=
#+begin_src python
  wb.db = 1
#+end_src

** Download & Install Conda
**** [[https:///docs.conda.io/en/latest/miniconda.html][Install: Miniconda for GNU/Linux or Windows]]

**** GNU/Linux: Too Easy to Install
**** Windows 10
~Take note of Miniconda3 installation path.~
****** During Miniconda3 installation tick:

1. Add Miniconda3 to my PATH environment variable

2. Register Miniconda3 as my default Python 3.9

**** Windows 7
The Python interpreters ~<= 3.8~ are compatible.


** GNU/Linux

*** Install Git
#+begin_src shell
  sudo apt-get update
  sudo apt-get install git
#+end_src

*** Download Github Repository
#+begin_src bash
  git clone https://github.com/mirbehroznoor/World-Bank-API-Python-DashBoard
#+end_src

*** Conda Environment

**** Python Dependencies
In =environment.yml=, the conda environment is named =wbconda=
#+begin_src shell :exports both :results output :cache no :eval yes
  cat environment.yml
#+end_src

#+RESULTS:
#+begin_example
name: wbconda
channels:
  - conda-forge
dependencies:
  - python==3.10
  - dash==2.3.1
  - wbgapi==1.0.7
  - plotly==5.7.0
  - pandas==1.4.2
  - black
  - pip
  - pip:
    - statsmodels==0.13.2
#+end_example

**** Create Conda Environment
#+begin_src shell
  bash build_env.sh
#+end_src

*** Run Python App
Simply run the =app.py= script. The App will open in the default browser after few seconds.
**** Manually
#+begin_src bash
  cd ~/path/to/World-Bank-API-Python-DashBoard
  conda activate wbconda
  python app.py
#+end_src

**** Automate
***** Write Bash Alias function
Find or create =.bash_aliases= in folder =$HOME= Directory. Insert the function snippet:
#+begin_src bash
  wbapp() {
      cd ~/path/to/World-Bank-API-Python-DashBoard
      conda activate wbconda
      python app.py
  }
#+end_src
For shell to re-read the =.bash_aliases= file, run the following command:
#+begin_src bash
  source ~/.bashrc
#+end_src
Afterwards in Terminal, simply run:
#+begin_src bash
  wbapp
#+end_src


** Windows 10 [[https://github.com/mirbehroznoor/World-Bank-API-Python-DashBoard/blob/main/Windows_Instructions.txt][Instructions.txt]]

*** First Option:

***** Git for Windows
Install git for windows (with default options) [[https://gitforwindows.org/][Install: Git for Windows]]

***** Download World Bank API files from Github Repository

***** Add Conda Path
Open Git Bash
Add conda.sh Path in Git Bash
#+begin_src shell
  #Type in Git Bash
  . C:/Users/your-username/miniconda3/etc/profile.d/conda.sh
#+end_src

***** Setup Conda Env
Manually open extracted path in Git Bash:
#+begin_src shell
  cd ~ /path/to/World-Bank-API-Python-Dashboard
  bash build_env.sh #Creates Conda Environment
#+end_src

***** Run the App
#+begin_src shell
  #Activates conda Environment
  conda activate wbconda
  #Runs Application
  python app.py
#+end_src

***** Open in Browser
If the App does not open automatically in your favorite browser.
Visit App URL:
#+begin_src html
localhost:8050
#+end_src
*<OR>*
#+begin_src html
http://127.0.0.1:8050
#+end_src

***** Close or Terminate Server
To exit Git Bash server press =Ctrl + C= in terminal
<OR>
To close Git Bash Enter =exit=

***** After Setup
To Re-run after initial installation (for later use or once Git Bash is closed):
Open Git Bash
Manually navigate to extracted files path
#+begin_src shell
  . C:/Users/your-username/miniconda3/etc/profile.d/conda.sh
  conda activate wbconda
  Python app.py
#+end_src

*** Second Option:
~The following instructions may not be accurate~
***** Install PyCharm
***** Create a Project
***** Use the =Git Clone= Option from PyCharm [[https://stackoverflow.com/questions/41023928/import-github-repository-to-pycharm][Stackoverflow: Import github Repository to PyCharm]]
***** Setup Conda Env within PyCharm
+ For Conda Env: =environment.yml=
+ For Pyevn Env: ~requirements.txt~
***** Run the App.py


** Acknowledgments
- [[https://towardsdatascience.com/how-to-extract-key-from-python-dictionary-using-value-2b2f8dd2a995][Towardsdatascience: Extract key from python dictionary]]
- [[https://blog.logrocket.com/data-visualization-interfaces-python-dash/][Logrocket Blog: Data Visualization Interfaces Python Dash]]
- [[https://blogs.worldbank.org/opendata/introducing-wbgapi-new-python-package-accessing-world-bank-data][World Bank Blogs: Introducing wbgapi New Python Package Accessing World Bank Data]]
- [[https://github.com/tgherzog/wbgapi][Github: wbgapi]]
- [[https://dash.plotly.com/interactive-graphing][Plotly: Interactive Graphing]]
- [[https://plotly.com/python/legend/][Plotly: Legend]]
- [[https://dash.plotly.com/urls][Plotly: Multi-Page Apps & URLs Support]]
- [[https://stackoverflow.com/questions/62642418/is-there-a-way-to-prevent-a-callback-from-firing-in-dash][Stackoverflow: Prevent a callback from firing in dash]]
- [[https://stackoverflow.com/questions/41023928/import-github-repository-to-pycharm][Stackoverflow: Import github Repository to PyCharm]]
